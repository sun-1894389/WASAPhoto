openapi: 3.0.3
info:
  title: WASAPhoto API
  description: |-
    This is the API for WASAPhoto homework 1 by 1894389
  version: 0.0.2
tags:
  - name: "login"
    description: Endpoint that manages the login
paths:
  /session:
    post:
      tags: ["login"]
      summary: Logs in the user
      description: |-
        If the user does not exist, it will be created,
        and an identifier is returned.
        If the user exists, the user identifier is returned.
      operationId: doLogin
      requestBody:
        description: User details
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/user_login"
        required: true
      responses:
        '201':
          description: User log-in action successful
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/login_return"
# --------------------------------------------------------------
  /users:
     get:
      tags: ["search"]
      summary: Gets the profile of the user with a certain id
      description: A user can find another user's profile only if he's not banned by the latter. Multiple users might match partially the nickname being searched
      operationId: getUserProfile
      responses:
        '201':
          description: User log-in action successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  identifier:
                  # change here if you decide to use an integer
                  # or any other type of identifier
                    type: string
                    example: "abcdef012345"
      
      
# --------------------------------------------------------------
components:
  parameters:
    identifier:
      name: id
      in: path
      description: A user's unique id
      required: true
      schema:
        description: String between 3-16 characters
        type: string
        pattern: '^.*?$'
        example: Maria
        minLength: 3
        maxLength: 16
        readOnly: true
  schemas:
    user_nickname:
      description: It's a user's nickname
      type: object
      properties:
        nickname:
          description: Any string between 3-16 characters
          type: string
          minLength: 3
          maxLength: 16
          pattern: '^.*?$'
          example: "Johnny"
      example:
        nickname: "JohnSun"
    user_login:
      description: Identifier sent by user during the login
      type: object
      properties:
        identifier:
          $ref: "#/components/schemas/user_nickname/properties/nickname"
    login_return:
      description: Identifier returned after the login
      type: object
      properties:
        identifier:
          $ref: "#/components/schemas/user_nickname/properties/nickname"